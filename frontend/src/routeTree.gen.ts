/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as MainLayoutImport } from './routes/_main-layout'
import { Route as AccountResetPasswordImport } from './routes/account/reset-password'
import { Route as MainLayoutProfileLayoutImport } from './routes/_main-layout/_profile-layout'

// Create Virtual Routes

const SignUpLazyImport = createFileRoute('/sign-up')()
const LoginLazyImport = createFileRoute('/login')()
const ForgottenPasswordLazyImport = createFileRoute('/forgotten-password')()
const MainLayoutIndexLazyImport = createFileRoute('/_main-layout/')()
const AccountVerificationLazyImport = createFileRoute('/account/verification')()
const AccountCompleteProfileLazyImport = createFileRoute(
  '/account/complete-profile',
)()
const MainLayoutSearchLazyImport = createFileRoute('/_main-layout/search')()
const MainLayoutSavedLazyImport = createFileRoute('/_main-layout/saved')()
const MainLayoutLikedLazyImport = createFileRoute('/_main-layout/liked')()
const MainLayoutActivityLazyImport = createFileRoute('/_main-layout/activity')()
const MainLayoutProfileLayoutUsernameLazyImport = createFileRoute(
  '/_main-layout/_profile-layout/$username',
)()

// Create/Update Routes

const SignUpLazyRoute = SignUpLazyImport.update({
  path: '/sign-up',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/sign-up.lazy').then((d) => d.Route))

const LoginLazyRoute = LoginLazyImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/login.lazy').then((d) => d.Route))

const ForgottenPasswordLazyRoute = ForgottenPasswordLazyImport.update({
  path: '/forgotten-password',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/forgotten-password.lazy').then((d) => d.Route),
)

const MainLayoutRoute = MainLayoutImport.update({
  id: '/_main-layout',
  getParentRoute: () => rootRoute,
} as any)

const MainLayoutIndexLazyRoute = MainLayoutIndexLazyImport.update({
  path: '/',
  getParentRoute: () => MainLayoutRoute,
} as any).lazy(() =>
  import('./routes/_main-layout/index.lazy').then((d) => d.Route),
)

const AccountVerificationLazyRoute = AccountVerificationLazyImport.update({
  path: '/account/verification',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/account/verification.lazy').then((d) => d.Route),
)

const AccountCompleteProfileLazyRoute = AccountCompleteProfileLazyImport.update(
  {
    path: '/account/complete-profile',
    getParentRoute: () => rootRoute,
  } as any,
).lazy(() =>
  import('./routes/account/complete-profile.lazy').then((d) => d.Route),
)

const MainLayoutSearchLazyRoute = MainLayoutSearchLazyImport.update({
  path: '/search',
  getParentRoute: () => MainLayoutRoute,
} as any).lazy(() =>
  import('./routes/_main-layout/search.lazy').then((d) => d.Route),
)

const MainLayoutSavedLazyRoute = MainLayoutSavedLazyImport.update({
  path: '/saved',
  getParentRoute: () => MainLayoutRoute,
} as any).lazy(() =>
  import('./routes/_main-layout/saved.lazy').then((d) => d.Route),
)

const MainLayoutLikedLazyRoute = MainLayoutLikedLazyImport.update({
  path: '/liked',
  getParentRoute: () => MainLayoutRoute,
} as any).lazy(() =>
  import('./routes/_main-layout/liked.lazy').then((d) => d.Route),
)

const MainLayoutActivityLazyRoute = MainLayoutActivityLazyImport.update({
  path: '/activity',
  getParentRoute: () => MainLayoutRoute,
} as any).lazy(() =>
  import('./routes/_main-layout/activity.lazy').then((d) => d.Route),
)

const AccountResetPasswordRoute = AccountResetPasswordImport.update({
  path: '/account/reset-password',
  getParentRoute: () => rootRoute,
} as any)

const MainLayoutProfileLayoutRoute = MainLayoutProfileLayoutImport.update({
  id: '/_profile-layout',
  getParentRoute: () => MainLayoutRoute,
} as any)

const MainLayoutProfileLayoutUsernameLazyRoute =
  MainLayoutProfileLayoutUsernameLazyImport.update({
    path: '/$username',
    getParentRoute: () => MainLayoutProfileLayoutRoute,
  } as any).lazy(() =>
    import('./routes/_main-layout/_profile-layout/$username.lazy').then(
      (d) => d.Route,
    ),
  )

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_main-layout': {
      id: '/_main-layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof MainLayoutImport
      parentRoute: typeof rootRoute
    }
    '/forgotten-password': {
      id: '/forgotten-password'
      path: '/forgotten-password'
      fullPath: '/forgotten-password'
      preLoaderRoute: typeof ForgottenPasswordLazyImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginLazyImport
      parentRoute: typeof rootRoute
    }
    '/sign-up': {
      id: '/sign-up'
      path: '/sign-up'
      fullPath: '/sign-up'
      preLoaderRoute: typeof SignUpLazyImport
      parentRoute: typeof rootRoute
    }
    '/_main-layout/_profile-layout': {
      id: '/_main-layout/_profile-layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof MainLayoutProfileLayoutImport
      parentRoute: typeof MainLayoutImport
    }
    '/account/reset-password': {
      id: '/account/reset-password'
      path: '/account/reset-password'
      fullPath: '/account/reset-password'
      preLoaderRoute: typeof AccountResetPasswordImport
      parentRoute: typeof rootRoute
    }
    '/_main-layout/activity': {
      id: '/_main-layout/activity'
      path: '/activity'
      fullPath: '/activity'
      preLoaderRoute: typeof MainLayoutActivityLazyImport
      parentRoute: typeof MainLayoutImport
    }
    '/_main-layout/liked': {
      id: '/_main-layout/liked'
      path: '/liked'
      fullPath: '/liked'
      preLoaderRoute: typeof MainLayoutLikedLazyImport
      parentRoute: typeof MainLayoutImport
    }
    '/_main-layout/saved': {
      id: '/_main-layout/saved'
      path: '/saved'
      fullPath: '/saved'
      preLoaderRoute: typeof MainLayoutSavedLazyImport
      parentRoute: typeof MainLayoutImport
    }
    '/_main-layout/search': {
      id: '/_main-layout/search'
      path: '/search'
      fullPath: '/search'
      preLoaderRoute: typeof MainLayoutSearchLazyImport
      parentRoute: typeof MainLayoutImport
    }
    '/account/complete-profile': {
      id: '/account/complete-profile'
      path: '/account/complete-profile'
      fullPath: '/account/complete-profile'
      preLoaderRoute: typeof AccountCompleteProfileLazyImport
      parentRoute: typeof rootRoute
    }
    '/account/verification': {
      id: '/account/verification'
      path: '/account/verification'
      fullPath: '/account/verification'
      preLoaderRoute: typeof AccountVerificationLazyImport
      parentRoute: typeof rootRoute
    }
    '/_main-layout/': {
      id: '/_main-layout/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof MainLayoutIndexLazyImport
      parentRoute: typeof MainLayoutImport
    }
    '/_main-layout/_profile-layout/$username': {
      id: '/_main-layout/_profile-layout/$username'
      path: '/$username'
      fullPath: '/$username'
      preLoaderRoute: typeof MainLayoutProfileLayoutUsernameLazyImport
      parentRoute: typeof MainLayoutProfileLayoutImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  MainLayoutRoute: MainLayoutRoute.addChildren({
    MainLayoutProfileLayoutRoute: MainLayoutProfileLayoutRoute.addChildren({
      MainLayoutProfileLayoutUsernameLazyRoute,
    }),
    MainLayoutActivityLazyRoute,
    MainLayoutLikedLazyRoute,
    MainLayoutSavedLazyRoute,
    MainLayoutSearchLazyRoute,
    MainLayoutIndexLazyRoute,
  }),
  ForgottenPasswordLazyRoute,
  LoginLazyRoute,
  SignUpLazyRoute,
  AccountResetPasswordRoute,
  AccountCompleteProfileLazyRoute,
  AccountVerificationLazyRoute,
})

/* prettier-ignore-end */
