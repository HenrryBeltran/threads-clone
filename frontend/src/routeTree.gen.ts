/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AuthenticatedImport } from './routes/_authenticated'

// Create Virtual Routes

const SignUpLazyImport = createFileRoute('/sign-up')()
const LoginLazyImport = createFileRoute('/login')()
const ForgottenPasswordLazyImport = createFileRoute('/forgotten-password')()
const AuthenticatedIndexLazyImport = createFileRoute('/_authenticated/')()
const AuthenticatedSearchLazyImport = createFileRoute(
  '/_authenticated/search',
)()
const AuthenticatedSavedLazyImport = createFileRoute('/_authenticated/saved')()
const AuthenticatedLikedLazyImport = createFileRoute('/_authenticated/liked')()
const AuthenticatedActivityLazyImport = createFileRoute(
  '/_authenticated/activity',
)()
const AuthenticatedUsernameLazyImport = createFileRoute(
  '/_authenticated/$username',
)()

// Create/Update Routes

const SignUpLazyRoute = SignUpLazyImport.update({
  path: '/sign-up',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/sign-up.lazy').then((d) => d.Route))

const LoginLazyRoute = LoginLazyImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/login.lazy').then((d) => d.Route))

const ForgottenPasswordLazyRoute = ForgottenPasswordLazyImport.update({
  path: '/forgotten-password',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/forgotten-password.lazy').then((d) => d.Route),
)

const AuthenticatedRoute = AuthenticatedImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedIndexLazyRoute = AuthenticatedIndexLazyImport.update({
  path: '/',
  getParentRoute: () => AuthenticatedRoute,
} as any).lazy(() =>
  import('./routes/_authenticated/index.lazy').then((d) => d.Route),
)

const AuthenticatedSearchLazyRoute = AuthenticatedSearchLazyImport.update({
  path: '/search',
  getParentRoute: () => AuthenticatedRoute,
} as any).lazy(() =>
  import('./routes/_authenticated/search.lazy').then((d) => d.Route),
)

const AuthenticatedSavedLazyRoute = AuthenticatedSavedLazyImport.update({
  path: '/saved',
  getParentRoute: () => AuthenticatedRoute,
} as any).lazy(() =>
  import('./routes/_authenticated/saved.lazy').then((d) => d.Route),
)

const AuthenticatedLikedLazyRoute = AuthenticatedLikedLazyImport.update({
  path: '/liked',
  getParentRoute: () => AuthenticatedRoute,
} as any).lazy(() =>
  import('./routes/_authenticated/liked.lazy').then((d) => d.Route),
)

const AuthenticatedActivityLazyRoute = AuthenticatedActivityLazyImport.update({
  path: '/activity',
  getParentRoute: () => AuthenticatedRoute,
} as any).lazy(() =>
  import('./routes/_authenticated/activity.lazy').then((d) => d.Route),
)

const AuthenticatedUsernameLazyRoute = AuthenticatedUsernameLazyImport.update({
  path: '/$username',
  getParentRoute: () => AuthenticatedRoute,
} as any).lazy(() =>
  import('./routes/_authenticated/$username.lazy').then((d) => d.Route),
)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_authenticated': {
      preLoaderRoute: typeof AuthenticatedImport
      parentRoute: typeof rootRoute
    }
    '/forgotten-password': {
      preLoaderRoute: typeof ForgottenPasswordLazyImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      preLoaderRoute: typeof LoginLazyImport
      parentRoute: typeof rootRoute
    }
    '/sign-up': {
      preLoaderRoute: typeof SignUpLazyImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/$username': {
      preLoaderRoute: typeof AuthenticatedUsernameLazyImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/activity': {
      preLoaderRoute: typeof AuthenticatedActivityLazyImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/liked': {
      preLoaderRoute: typeof AuthenticatedLikedLazyImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/saved': {
      preLoaderRoute: typeof AuthenticatedSavedLazyImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/search': {
      preLoaderRoute: typeof AuthenticatedSearchLazyImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/': {
      preLoaderRoute: typeof AuthenticatedIndexLazyImport
      parentRoute: typeof AuthenticatedImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  AuthenticatedRoute.addChildren([
    AuthenticatedUsernameLazyRoute,
    AuthenticatedActivityLazyRoute,
    AuthenticatedLikedLazyRoute,
    AuthenticatedSavedLazyRoute,
    AuthenticatedSearchLazyRoute,
    AuthenticatedIndexLazyRoute,
  ]),
  ForgottenPasswordLazyRoute,
  LoginLazyRoute,
  SignUpLazyRoute,
])

/* prettier-ignore-end */
