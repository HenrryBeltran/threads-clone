/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as MainLayoutImport } from './routes/_main-layout'
import { Route as AccountResetPasswordImport } from './routes/account/reset-password'
import { Route as MainLayoutSearchImport } from './routes/_main-layout/search'
import { Route as MainLayoutProfileLayoutImport } from './routes/_main-layout/_profile-layout'

// Create Virtual Routes

const SignUpLazyImport = createFileRoute('/sign-up')()
const LoginLazyImport = createFileRoute('/login')()
const ForgottenPasswordLazyImport = createFileRoute('/forgotten-password')()
const MainLayoutIndexLazyImport = createFileRoute('/_main-layout/')()
const AccountVerificationLazyImport = createFileRoute('/account/verification')()
const AccountCompleteProfileLazyImport = createFileRoute(
  '/account/complete-profile',
)()
const MainLayoutSavedLazyImport = createFileRoute('/_main-layout/saved')()
const MainLayoutLikedLazyImport = createFileRoute('/_main-layout/liked')()
const MainLayoutActivityLazyImport = createFileRoute('/_main-layout/activity')()
const MainLayoutProfileLayoutUsernameIndexLazyImport = createFileRoute(
  '/_main-layout/_profile-layout/$username/',
)()
const MainLayoutProfileLayoutUsernameRepliesLazyImport = createFileRoute(
  '/_main-layout/_profile-layout/$username/replies',
)()
const MainLayoutUsernamePostPostIdLazyImport = createFileRoute(
  '/_main-layout/$username/post/$postId',
)()

// Create/Update Routes

const SignUpLazyRoute = SignUpLazyImport.update({
  path: '/sign-up',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/sign-up.lazy').then((d) => d.Route))

const LoginLazyRoute = LoginLazyImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/login.lazy').then((d) => d.Route))

const ForgottenPasswordLazyRoute = ForgottenPasswordLazyImport.update({
  path: '/forgotten-password',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/forgotten-password.lazy').then((d) => d.Route),
)

const MainLayoutRoute = MainLayoutImport.update({
  id: '/_main-layout',
  getParentRoute: () => rootRoute,
} as any)

const MainLayoutIndexLazyRoute = MainLayoutIndexLazyImport.update({
  path: '/',
  getParentRoute: () => MainLayoutRoute,
} as any).lazy(() =>
  import('./routes/_main-layout/index.lazy').then((d) => d.Route),
)

const AccountVerificationLazyRoute = AccountVerificationLazyImport.update({
  path: '/account/verification',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/account/verification.lazy').then((d) => d.Route),
)

const AccountCompleteProfileLazyRoute = AccountCompleteProfileLazyImport.update(
  {
    path: '/account/complete-profile',
    getParentRoute: () => rootRoute,
  } as any,
).lazy(() =>
  import('./routes/account/complete-profile.lazy').then((d) => d.Route),
)

const MainLayoutSavedLazyRoute = MainLayoutSavedLazyImport.update({
  path: '/saved',
  getParentRoute: () => MainLayoutRoute,
} as any).lazy(() =>
  import('./routes/_main-layout/saved.lazy').then((d) => d.Route),
)

const MainLayoutLikedLazyRoute = MainLayoutLikedLazyImport.update({
  path: '/liked',
  getParentRoute: () => MainLayoutRoute,
} as any).lazy(() =>
  import('./routes/_main-layout/liked.lazy').then((d) => d.Route),
)

const MainLayoutActivityLazyRoute = MainLayoutActivityLazyImport.update({
  path: '/activity',
  getParentRoute: () => MainLayoutRoute,
} as any).lazy(() =>
  import('./routes/_main-layout/activity.lazy').then((d) => d.Route),
)

const AccountResetPasswordRoute = AccountResetPasswordImport.update({
  path: '/account/reset-password',
  getParentRoute: () => rootRoute,
} as any)

const MainLayoutSearchRoute = MainLayoutSearchImport.update({
  path: '/search',
  getParentRoute: () => MainLayoutRoute,
} as any).lazy(() =>
  import('./routes/_main-layout/search.lazy').then((d) => d.Route),
)

const MainLayoutProfileLayoutRoute = MainLayoutProfileLayoutImport.update({
  id: '/_profile-layout',
  getParentRoute: () => MainLayoutRoute,
} as any)

const MainLayoutProfileLayoutUsernameIndexLazyRoute =
  MainLayoutProfileLayoutUsernameIndexLazyImport.update({
    path: '/$username/',
    getParentRoute: () => MainLayoutProfileLayoutRoute,
  } as any).lazy(() =>
    import('./routes/_main-layout/_profile-layout/$username/index.lazy').then(
      (d) => d.Route,
    ),
  )

const MainLayoutProfileLayoutUsernameRepliesLazyRoute =
  MainLayoutProfileLayoutUsernameRepliesLazyImport.update({
    path: '/$username/replies',
    getParentRoute: () => MainLayoutProfileLayoutRoute,
  } as any).lazy(() =>
    import('./routes/_main-layout/_profile-layout/$username/replies.lazy').then(
      (d) => d.Route,
    ),
  )

const MainLayoutUsernamePostPostIdLazyRoute =
  MainLayoutUsernamePostPostIdLazyImport.update({
    path: '/$username/post/$postId',
    getParentRoute: () => MainLayoutRoute,
  } as any).lazy(() =>
    import('./routes/_main-layout/$username/post/$postId.lazy').then(
      (d) => d.Route,
    ),
  )

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_main-layout': {
      id: '/_main-layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof MainLayoutImport
      parentRoute: typeof rootRoute
    }
    '/forgotten-password': {
      id: '/forgotten-password'
      path: '/forgotten-password'
      fullPath: '/forgotten-password'
      preLoaderRoute: typeof ForgottenPasswordLazyImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginLazyImport
      parentRoute: typeof rootRoute
    }
    '/sign-up': {
      id: '/sign-up'
      path: '/sign-up'
      fullPath: '/sign-up'
      preLoaderRoute: typeof SignUpLazyImport
      parentRoute: typeof rootRoute
    }
    '/_main-layout/_profile-layout': {
      id: '/_main-layout/_profile-layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof MainLayoutProfileLayoutImport
      parentRoute: typeof MainLayoutImport
    }
    '/_main-layout/search': {
      id: '/_main-layout/search'
      path: '/search'
      fullPath: '/search'
      preLoaderRoute: typeof MainLayoutSearchImport
      parentRoute: typeof MainLayoutImport
    }
    '/account/reset-password': {
      id: '/account/reset-password'
      path: '/account/reset-password'
      fullPath: '/account/reset-password'
      preLoaderRoute: typeof AccountResetPasswordImport
      parentRoute: typeof rootRoute
    }
    '/_main-layout/activity': {
      id: '/_main-layout/activity'
      path: '/activity'
      fullPath: '/activity'
      preLoaderRoute: typeof MainLayoutActivityLazyImport
      parentRoute: typeof MainLayoutImport
    }
    '/_main-layout/liked': {
      id: '/_main-layout/liked'
      path: '/liked'
      fullPath: '/liked'
      preLoaderRoute: typeof MainLayoutLikedLazyImport
      parentRoute: typeof MainLayoutImport
    }
    '/_main-layout/saved': {
      id: '/_main-layout/saved'
      path: '/saved'
      fullPath: '/saved'
      preLoaderRoute: typeof MainLayoutSavedLazyImport
      parentRoute: typeof MainLayoutImport
    }
    '/account/complete-profile': {
      id: '/account/complete-profile'
      path: '/account/complete-profile'
      fullPath: '/account/complete-profile'
      preLoaderRoute: typeof AccountCompleteProfileLazyImport
      parentRoute: typeof rootRoute
    }
    '/account/verification': {
      id: '/account/verification'
      path: '/account/verification'
      fullPath: '/account/verification'
      preLoaderRoute: typeof AccountVerificationLazyImport
      parentRoute: typeof rootRoute
    }
    '/_main-layout/': {
      id: '/_main-layout/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof MainLayoutIndexLazyImport
      parentRoute: typeof MainLayoutImport
    }
    '/_main-layout/$username/post/$postId': {
      id: '/_main-layout/$username/post/$postId'
      path: '/$username/post/$postId'
      fullPath: '/$username/post/$postId'
      preLoaderRoute: typeof MainLayoutUsernamePostPostIdLazyImport
      parentRoute: typeof MainLayoutImport
    }
    '/_main-layout/_profile-layout/$username/replies': {
      id: '/_main-layout/_profile-layout/$username/replies'
      path: '/$username/replies'
      fullPath: '/$username/replies'
      preLoaderRoute: typeof MainLayoutProfileLayoutUsernameRepliesLazyImport
      parentRoute: typeof MainLayoutProfileLayoutImport
    }
    '/_main-layout/_profile-layout/$username/': {
      id: '/_main-layout/_profile-layout/$username/'
      path: '/$username'
      fullPath: '/$username'
      preLoaderRoute: typeof MainLayoutProfileLayoutUsernameIndexLazyImport
      parentRoute: typeof MainLayoutProfileLayoutImport
    }
  }
}

// Create and export the route tree

interface MainLayoutProfileLayoutRouteChildren {
  MainLayoutProfileLayoutUsernameRepliesLazyRoute: typeof MainLayoutProfileLayoutUsernameRepliesLazyRoute
  MainLayoutProfileLayoutUsernameIndexLazyRoute: typeof MainLayoutProfileLayoutUsernameIndexLazyRoute
}

const MainLayoutProfileLayoutRouteChildren: MainLayoutProfileLayoutRouteChildren =
  {
    MainLayoutProfileLayoutUsernameRepliesLazyRoute:
      MainLayoutProfileLayoutUsernameRepliesLazyRoute,
    MainLayoutProfileLayoutUsernameIndexLazyRoute:
      MainLayoutProfileLayoutUsernameIndexLazyRoute,
  }

const MainLayoutProfileLayoutRouteWithChildren =
  MainLayoutProfileLayoutRoute._addFileChildren(
    MainLayoutProfileLayoutRouteChildren,
  )

interface MainLayoutRouteChildren {
  MainLayoutProfileLayoutRoute: typeof MainLayoutProfileLayoutRouteWithChildren
  MainLayoutSearchRoute: typeof MainLayoutSearchRoute
  MainLayoutActivityLazyRoute: typeof MainLayoutActivityLazyRoute
  MainLayoutLikedLazyRoute: typeof MainLayoutLikedLazyRoute
  MainLayoutSavedLazyRoute: typeof MainLayoutSavedLazyRoute
  MainLayoutIndexLazyRoute: typeof MainLayoutIndexLazyRoute
  MainLayoutUsernamePostPostIdLazyRoute: typeof MainLayoutUsernamePostPostIdLazyRoute
}

const MainLayoutRouteChildren: MainLayoutRouteChildren = {
  MainLayoutProfileLayoutRoute: MainLayoutProfileLayoutRouteWithChildren,
  MainLayoutSearchRoute: MainLayoutSearchRoute,
  MainLayoutActivityLazyRoute: MainLayoutActivityLazyRoute,
  MainLayoutLikedLazyRoute: MainLayoutLikedLazyRoute,
  MainLayoutSavedLazyRoute: MainLayoutSavedLazyRoute,
  MainLayoutIndexLazyRoute: MainLayoutIndexLazyRoute,
  MainLayoutUsernamePostPostIdLazyRoute: MainLayoutUsernamePostPostIdLazyRoute,
}

const MainLayoutRouteWithChildren = MainLayoutRoute._addFileChildren(
  MainLayoutRouteChildren,
)

export interface FileRoutesByFullPath {
  '': typeof MainLayoutProfileLayoutRouteWithChildren
  '/forgotten-password': typeof ForgottenPasswordLazyRoute
  '/login': typeof LoginLazyRoute
  '/sign-up': typeof SignUpLazyRoute
  '/search': typeof MainLayoutSearchRoute
  '/account/reset-password': typeof AccountResetPasswordRoute
  '/activity': typeof MainLayoutActivityLazyRoute
  '/liked': typeof MainLayoutLikedLazyRoute
  '/saved': typeof MainLayoutSavedLazyRoute
  '/account/complete-profile': typeof AccountCompleteProfileLazyRoute
  '/account/verification': typeof AccountVerificationLazyRoute
  '/': typeof MainLayoutIndexLazyRoute
  '/$username/post/$postId': typeof MainLayoutUsernamePostPostIdLazyRoute
  '/$username/replies': typeof MainLayoutProfileLayoutUsernameRepliesLazyRoute
  '/$username': typeof MainLayoutProfileLayoutUsernameIndexLazyRoute
}

export interface FileRoutesByTo {
  '/forgotten-password': typeof ForgottenPasswordLazyRoute
  '/login': typeof LoginLazyRoute
  '/sign-up': typeof SignUpLazyRoute
  '': typeof MainLayoutProfileLayoutRouteWithChildren
  '/search': typeof MainLayoutSearchRoute
  '/account/reset-password': typeof AccountResetPasswordRoute
  '/activity': typeof MainLayoutActivityLazyRoute
  '/liked': typeof MainLayoutLikedLazyRoute
  '/saved': typeof MainLayoutSavedLazyRoute
  '/account/complete-profile': typeof AccountCompleteProfileLazyRoute
  '/account/verification': typeof AccountVerificationLazyRoute
  '/': typeof MainLayoutIndexLazyRoute
  '/$username/post/$postId': typeof MainLayoutUsernamePostPostIdLazyRoute
  '/$username/replies': typeof MainLayoutProfileLayoutUsernameRepliesLazyRoute
  '/$username': typeof MainLayoutProfileLayoutUsernameIndexLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_main-layout': typeof MainLayoutRouteWithChildren
  '/forgotten-password': typeof ForgottenPasswordLazyRoute
  '/login': typeof LoginLazyRoute
  '/sign-up': typeof SignUpLazyRoute
  '/_main-layout/_profile-layout': typeof MainLayoutProfileLayoutRouteWithChildren
  '/_main-layout/search': typeof MainLayoutSearchRoute
  '/account/reset-password': typeof AccountResetPasswordRoute
  '/_main-layout/activity': typeof MainLayoutActivityLazyRoute
  '/_main-layout/liked': typeof MainLayoutLikedLazyRoute
  '/_main-layout/saved': typeof MainLayoutSavedLazyRoute
  '/account/complete-profile': typeof AccountCompleteProfileLazyRoute
  '/account/verification': typeof AccountVerificationLazyRoute
  '/_main-layout/': typeof MainLayoutIndexLazyRoute
  '/_main-layout/$username/post/$postId': typeof MainLayoutUsernamePostPostIdLazyRoute
  '/_main-layout/_profile-layout/$username/replies': typeof MainLayoutProfileLayoutUsernameRepliesLazyRoute
  '/_main-layout/_profile-layout/$username/': typeof MainLayoutProfileLayoutUsernameIndexLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/forgotten-password'
    | '/login'
    | '/sign-up'
    | '/search'
    | '/account/reset-password'
    | '/activity'
    | '/liked'
    | '/saved'
    | '/account/complete-profile'
    | '/account/verification'
    | '/'
    | '/$username/post/$postId'
    | '/$username/replies'
    | '/$username'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/forgotten-password'
    | '/login'
    | '/sign-up'
    | ''
    | '/search'
    | '/account/reset-password'
    | '/activity'
    | '/liked'
    | '/saved'
    | '/account/complete-profile'
    | '/account/verification'
    | '/'
    | '/$username/post/$postId'
    | '/$username/replies'
    | '/$username'
  id:
    | '__root__'
    | '/_main-layout'
    | '/forgotten-password'
    | '/login'
    | '/sign-up'
    | '/_main-layout/_profile-layout'
    | '/_main-layout/search'
    | '/account/reset-password'
    | '/_main-layout/activity'
    | '/_main-layout/liked'
    | '/_main-layout/saved'
    | '/account/complete-profile'
    | '/account/verification'
    | '/_main-layout/'
    | '/_main-layout/$username/post/$postId'
    | '/_main-layout/_profile-layout/$username/replies'
    | '/_main-layout/_profile-layout/$username/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  MainLayoutRoute: typeof MainLayoutRouteWithChildren
  ForgottenPasswordLazyRoute: typeof ForgottenPasswordLazyRoute
  LoginLazyRoute: typeof LoginLazyRoute
  SignUpLazyRoute: typeof SignUpLazyRoute
  AccountResetPasswordRoute: typeof AccountResetPasswordRoute
  AccountCompleteProfileLazyRoute: typeof AccountCompleteProfileLazyRoute
  AccountVerificationLazyRoute: typeof AccountVerificationLazyRoute
}

const rootRouteChildren: RootRouteChildren = {
  MainLayoutRoute: MainLayoutRouteWithChildren,
  ForgottenPasswordLazyRoute: ForgottenPasswordLazyRoute,
  LoginLazyRoute: LoginLazyRoute,
  SignUpLazyRoute: SignUpLazyRoute,
  AccountResetPasswordRoute: AccountResetPasswordRoute,
  AccountCompleteProfileLazyRoute: AccountCompleteProfileLazyRoute,
  AccountVerificationLazyRoute: AccountVerificationLazyRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_main-layout",
        "/forgotten-password",
        "/login",
        "/sign-up",
        "/account/reset-password",
        "/account/complete-profile",
        "/account/verification"
      ]
    },
    "/_main-layout": {
      "filePath": "_main-layout.tsx",
      "children": [
        "/_main-layout/_profile-layout",
        "/_main-layout/search",
        "/_main-layout/activity",
        "/_main-layout/liked",
        "/_main-layout/saved",
        "/_main-layout/",
        "/_main-layout/$username/post/$postId"
      ]
    },
    "/forgotten-password": {
      "filePath": "forgotten-password.lazy.tsx"
    },
    "/login": {
      "filePath": "login.lazy.tsx"
    },
    "/sign-up": {
      "filePath": "sign-up.lazy.tsx"
    },
    "/_main-layout/_profile-layout": {
      "filePath": "_main-layout/_profile-layout.tsx",
      "parent": "/_main-layout",
      "children": [
        "/_main-layout/_profile-layout/$username/replies",
        "/_main-layout/_profile-layout/$username/"
      ]
    },
    "/_main-layout/search": {
      "filePath": "_main-layout/search.tsx",
      "parent": "/_main-layout"
    },
    "/account/reset-password": {
      "filePath": "account/reset-password.tsx"
    },
    "/_main-layout/activity": {
      "filePath": "_main-layout/activity.lazy.tsx",
      "parent": "/_main-layout"
    },
    "/_main-layout/liked": {
      "filePath": "_main-layout/liked.lazy.tsx",
      "parent": "/_main-layout"
    },
    "/_main-layout/saved": {
      "filePath": "_main-layout/saved.lazy.tsx",
      "parent": "/_main-layout"
    },
    "/account/complete-profile": {
      "filePath": "account/complete-profile.lazy.tsx"
    },
    "/account/verification": {
      "filePath": "account/verification.lazy.tsx"
    },
    "/_main-layout/": {
      "filePath": "_main-layout/index.lazy.tsx",
      "parent": "/_main-layout"
    },
    "/_main-layout/$username/post/$postId": {
      "filePath": "_main-layout/$username/post/$postId.lazy.tsx",
      "parent": "/_main-layout"
    },
    "/_main-layout/_profile-layout/$username/replies": {
      "filePath": "_main-layout/_profile-layout/$username/replies.lazy.tsx",
      "parent": "/_main-layout/_profile-layout"
    },
    "/_main-layout/_profile-layout/$username/": {
      "filePath": "_main-layout/_profile-layout/$username/index.lazy.tsx",
      "parent": "/_main-layout/_profile-layout"
    }
  }
}
ROUTE_MANIFEST_END */
